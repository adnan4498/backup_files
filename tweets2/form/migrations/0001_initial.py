# Generated by Django 3.1.12 on 2022-07-14 12:09

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone
import djongo.models.fields
import form.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Labels',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('label', djongo.models.fields.ArrayField(model_container=form.models.Label)),
            ],
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('timezone', models.CharField(max_length=20)),
                ('user_id', models.CharField(max_length=40)),
                ('username', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('language', models.CharField(max_length=10)),
                ('mentions', djongo.models.fields.ArrayField(model_container=form.models.Mentions)),
                ('urls', djongo.models.fields.ArrayField(model_container=form.models.Urls)),
                ('photos', djongo.models.fields.ArrayField(model_container=form.models.Photos)),
                ('replies_count', models.IntegerField()),
                ('retweet_count', models.IntegerField()),
                ('likes_count', models.IntegerField()),
                ('hashtags', djongo.models.fields.ArrayField(model_container=form.models.Hashtags)),
                ('content_Link', models.CharField(max_length=50)),
                ('content', models.CharField(max_length=200)),
                ('label', djongo.models.fields.ArrayField(model_container=form.models.Label)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
